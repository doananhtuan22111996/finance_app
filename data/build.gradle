plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    namespace 'vn.finance.data'

    defaultConfig {
        compileSdk versions.application.compileSdkVersion
        minSdkVersion versions.application.minSdkVersion
        targetSdkVersion versions.application.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions += "environment"
    productFlavors {

        ext.loadConfig = { context ->
            Properties configProps = new Properties()
            configProps.load(project.rootProject.file("env.${context.name}.properties").newDataInputStream())
            context.buildConfigField("String", "MAIN_DOMAIN", configProps.getProperty('main.domain'))
        }

        dev {
            dimension "environment"
            loadConfig(productFlavors.dev)
        }

        prod {
            dimension "environment"
            loadConfig(productFlavors.prod)
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        buildConfig = true
    }
}

dependencies {
    implementation project(path: ':domain')

    // testing
    testImplementation "junit:junit:${versions.test.junit}"
    androidTestImplementation "androidx.test.ext:junit:${versions.test.androidxJunit}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${versions.test.espressoCore}"

    // debug
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.debug.loggingInterceptor"

    // local
    implementation "androidx.room:room-runtime:${versions.database.room}"
    kapt "androidx.room:room-compiler:${versions.database.room}"

    implementation "androidx.room:room-paging:${versions.database.room}"

    implementation "androidx.security:security-crypto-ktx:${versions.local.securePreference}"

    // DI
    implementation "io.insert-koin:koin-android:${versions.di.koin}"

    implementation "com.squareup.retrofit2:retrofit:${versions.httpClient.retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${versions.httpClient.retrofit}"

    // debug
    implementation "com.jakewharton.timber:timber:${versions.debug.timber}"
}
